# CC is the default C compiler
CC=gcc

# CXX is the default C++ compiler 
CXX=g++

LD=ld 
ASM=nasm
LDFLAGS=-lkernel32
SYSTEM32=C:/Windows/System32

.PHONY: clean

# Has a large amount of startup code
# Notice we don't need to link against kernel32
hello.write:
	$(CC) hello-world.c  -o bin/hello-world.exe

# nostdlib removes standard startup code. -s strips the binary of symbols 
hello.write.nostd:
	$(CC) hello-world-nostd.c $(LDFLAGS)   -nostdlib -s -o bin/hello-world-min.exe

# create object file
hello.write.asm: hello.write.obj hello.write.link
	
hello.write.obj:
	$(ASM) -f win64 hello-world.asm -o bin/hello-world.obj

hello.write.link:
	$(LD) -o bin/hello-world.asm.exe bin/hello-world.obj -L$(SYSTEM32) $(LDFLAGS) -s 

# using the Microsoft Visual C compiler 
hello.write.msvc:
	cl   .\hello-world.c   /link /SUBSYSTEM:CONSOLE  /ENTRY:_main kernel32.lib

hello.cout:
	$(CXX) hello-cout.cpp -o bin/hello-cout.exe


clean:
	rm bin/*